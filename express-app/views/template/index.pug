extends ../layout

block styles
    style.        
        .dataTables_filter {
            float: left !important;
        }
        .button-demo{
            margin-top: 8px;
        }
        .buttons .btn {
            margin-right: 8px;
            margin-bottom: 13px;
            min-width: 120px;
        }
block content
    .row.clearfix
        .col-lg-12.col-md-12.col-sm-12.col-xs-12
            .card
                .header
                    div(style="display: -webkit-inline-box")
                        h2 #{title} mes de                    
                            select#monthSelect.select.form-control
                                option(value='1', selected=date.getUTCMonth()===0) Enero
                                option(value='2', selected=date.getUTCMonth()===1) Fefrero
                                option(value='3', selected=date.getUTCMonth()===2) Marzo
                                option(value='4', selected=date.getUTCMonth()===3) Abril
                                option(value='5', selected=date.getUTCMonth()===4) Mayo
                                option(value='6', selected=date.getUTCMonth()===5) Junio
                                option(value='7', selected=date.getUTCMonth()===6) Julio
                                option(value='8', selected=date.getUTCMonth()===7) Agosto
                                option(value='9', selected=date.getUTCMonth()===8) Septiembre
                                option(value='10', selected=date.getUTCMonth()===9) Octubre
                                option(value='11', selected=date.getUTCMonth()===10) Noviembre
                                option(value='12', selected=date.getUTCMonth()===11) Diciembre
                            | de 
                            select#yearSelect.select.form-control
                                option(value='2018', selected=date.getFullYear()===2018) 2018
                                option(value='2019', selected=date.getFullYear()===2019) 2019
                    .button-demo
                        button#saveBtn.btn.btn-primary.waves-effect(type='button')
                            i.material-icons save
                            |  Guardar
                        a#exportBtn.btn.btn-success.waves-effect(href='javascript:void(0);')
                            i.material-icons get_app
                            |  Exportar a excel
                .body
                    ul#templateTabs.nav.nav-tabs.tab-nav-right(role='tablist')
                        li.active(role='presentation')
                            a(href='#supportTab', data-toggle='tab')
                                i.material-icons mood
                                | Descuentos Personal Soporte
                        li(role='presentation')
                            a(href='#adminTab', data-toggle='tab')
                                i.material-icons school
                                | Descuentos Personal Administrativo y Docentes
                        li(role='presentation')
                            a(href='#templateTab', data-toggle='tab')
                                i.material-icons attach_money
                                | Planilla de Sueldo
                    .tab-content
                        #supportTab.tab-pane.fade.in.active(role='tabpanel')
                            include ./support
                        #adminTab.tab-pane.fade(role='tabpanel')
                            include ./admin-teacher
                        #templateTab.tab-pane.fade(role='tabpanel')
                            include ./template
block scripts
    script.
        $("#saveBtn").click(function(){
            var discountSupport = tableToJson(document.getElementById("dataTableSupport"));
            var discountAdminTeacher = tableToJson(document.getElementById("dataTableAdminTeacher"));
            var finalTemplate = tableToJson(document.getElementById("dataTableTemplate"));
            var data = {
                date: new Date($("#yearSelect").val(), $("#monthSelect").val(), 0),
                discountSupport: discountSupport,
                discountAdminTeacher: discountAdminTeacher,
                finalTemplate: finalTemplate
            }
            $.post({
                url: "#{url}",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                success: function(result, textStatus, xhr){
                    switch (xhr.status){
                        case 201:
                            notify(result.message, result.success, xhr.getResponseHeader("Location"));
                            $("#exportBtn").attr("href", xhr.getResponseHeader("Location"))
                        break;
                        default:
                            console.log(result, textStatus, xhr)
                        break;
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown){
                    console.log(XMLHttpRequest, textStatus, errorThrown)
                }
            })
        });

        $(".select").selectpicker({
            width: "200px"
        });

        $(".only-numbers").keydown(function(event) {
            if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 110 || event.keyCode == 190 ||
                (event.keyCode == 65 && event.ctrlKey === true) || 
                (event.keyCode >= 35 && event.keyCode <= 39)  ) {
                return;
            } else {
                if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault(); 
                }
            }
        });

        $(".editable-other-bonus").bind("DOMSubtreeModified", function(){
            updateTemplate($(this).data("id"));
        });

        $(".goToCell").click(function(){
            var id = $(this).data("id");
            var ele = $(`#discountRow-${id}`);
            var w = $(window);
            $(`#templateTabs a[href="#${$(this).data("tab")}"]`).tab('show');
            ele.attr("style", "background-color: yellow");          
            setTimeout(function(){
                if (ele.length){
                    $('html,body').animate({scrollTop: ele.offset().top - (w.height()/2)}, 1000 );
                }
            }, 300);
            setTimeout(function(){
                ele.removeAttr("style")
            }, 4000);
        });

        //Support
        var s = $('#dataTableSupport').DataTable({
            buttons: [],
            paging: false,
            dom: 'Bfrtip',
            responsive: true,
            "language": {                             
                "decimal": "",
                "emptyTable": "No existen registros en personal de soporte",   
                "info": "Mostrando del registro _START_ al _END_ de un total de _TOTAL_ registros",
                "infoEmpty": "Mostrando 0 registros (ninguno)",
                "infoFiltered": "(Datos filtrados de _MAX_ registros)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "Moostrar _MENU_ entradas",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "Buscar en personal de soporte:",
                "zeroRecords": "No se encontraron registros",
                "paginate": {
                    "first": "Primero",
                    "last": "Ultimo",
                    "next": "Siguiente",
                    "previous": "Anterior"
                },
                "aria": {
                    "sortAscending": ": ordenar ascendentemente",
                    "sortDescending": ": ordenar descendentemente"
                }
            }
        });

        $(".editable-support").bind("DOMSubtreeModified", function(){
            var total = 0;
            var id = $(this).data("id");
            for (i=0; i<6 ; i++){
                var ele = $(`#value${i}-${id}`);
                var value = parseFloat(ele.html());
                if (!isNaN(value)){
                    total = total + value;
                }
            }
            $(`#total-${id}`).html(total);
            updateTemplate(id);
        });

        //admin-teacher
        var at = $('#dataTableAdminTeacher').DataTable({
            buttons: [],
            paging: false,
            dom: 'Bfrtip',
            responsive: true,
            "language": {                             
                "decimal": "",
                "emptyTable": "No existen registros en personal docente y administrativo",   
                "info": "Mostrando del registro _START_ al _END_ de un total de _TOTAL_ registros",
                "infoEmpty": "Mostrando 0 registros (ninguno)",
                "infoFiltered": "(Datos filtrados de _MAX_ registros)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "Moostrar _MENU_ entradas",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "Buscar en personal docente y administrativo:",
                "zeroRecords": "No se encontraron registros",
                "paginate": {
                    "first": "Primero",
                    "last": "Ultimo",
                    "next": "Siguiente",
                    "previous": "Anterior"
                },
                "aria": {
                    "sortAscending": ": ordenar ascendentemente",
                    "sortDescending": ": ordenar descendentemente"
                }
            }
        });

        $(".editable-admin-teacher").bind("DOMSubtreeModified", function(){
            var total = 0;
            var id = $(this).data("id");
            for (i=0; i<7 ; i++){
                var ele = $(`#value${i}-${id}`);
                var value = parseFloat(ele.html());
                if (!isNaN(value)){
                    total = total + value;
                }
            }
            $(`#total-${id}`).html(total);
            updateTemplate(id);
        });

        //template
        var at = $('#dataTableTemplate').DataTable({
            buttons: [],
            paging: false,
            dom: 'Bfrtip',
            responsive: true,
            "language": {                             
                "decimal": "",
                "emptyTable": "No existen registros en planilla",   
                "info": "Mostrando del registro _START_ al _END_ de un total de _TOTAL_ registros",
                "infoEmpty": "Mostrando 0 registros (ninguno)",
                "infoFiltered": "(Datos filtrados de _MAX_ registros)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "Moostrar _MENU_ entradas",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "Buscar planilla:",
                "zeroRecords": "No se encontraron registros",
                "paginate": {
                    "first": "Primero",
                    "last": "Ultimo",
                    "next": "Siguiente",
                    "previous": "Anterior"
                },
                "aria": {
                    "sortAscending": ": ordenar ascendentemente",
                    "sortDescending": ": ordenar descendentemente"
                }
            }
        });       

        function updateTemplate(id){
            var valueSalary = parseFloat($(`#valueSalary-${id}`).html());
            var valueIncrement = parseFloat($(`#valueIncrement-${id}`).html());
            var valueOtherBonus = parseFloat($(`#valueOtherBonus-${id}`).html());
            var valueOtherDiscount = parseFloat($(`#total-${id}`).html());
            var valueAFPDiscount = parseFloat($(`#valueAFPDiscount-${id}`).html());   
            if (isNaN(valueSalary)) valueSalary = 0;
            if (isNaN(valueIncrement)) valueIncrement = 0;
            if (isNaN(valueOtherBonus)) valueOtherBonus = 0;
            if (isNaN(valueOtherDiscount)) valueOtherDiscount = 0;
            if (isNaN(valueAFPDiscount)) valueAFPDiscount = 0;

            var valueTotalGain = valueSalary + valueIncrement + valueOtherBonus;
            var valueTotalDiscount = valueOtherDiscount + valueAFPDiscount;
            var valueLiquidPayable = valueTotalGain - valueTotalDiscount;

            //Total Gain
            $(`#valueTotalGain-${id}`).html(valueTotalGain);
            //Other Discount cell
            $(`#valueOtherDiscount-${id}`).html(valueOtherDiscount);
            //Total Discount cell
            $(`#valueTotalDiscount-${id}`).html(valueTotalDiscount);
            //Liquid payable
            $(`#valueLiquidPayable-${id}`).html(valueLiquidPayable);
        }

        function tableToJson(table) { 
            var data = [];
            var headers = [];
            var index = 0;
            for (var i=0; i<table.rows[0].cells.length; i++) {
                if (i === 0){
                    headers[index] = "id";
                    headers[index + 1] = table.rows[0].cells[i].dataset.key;
                    index++;
                }else{
                    headers[index] = table.rows[0].cells[i].dataset.key;
                }
                index++;
            }            
            for (var i=1; i<table.rows.length - 1; i++) {
                index = 0;
                var tableRow = table.rows[i]; var rowData = {};
                for (var j=0; j<tableRow.cells.length; j++) { 
                    var value = tableRow.cells[j].innerHTML;
                    if (value ==="") value = 0;
                    if (j ===0) {
                        rowData[ headers[index] ] = tableRow.cells[j].dataset.id;
                        rowData[ headers[index + 1] ] = value;
                        index++;
                    }else{
                        rowData[ headers[index] ] = value;
                    }
                    index++;
                }
                data.push(rowData); 
            } 
            return data;
        }